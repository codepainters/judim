name: Rust CI

on:
  push:
  pull_request:
    branches: ["main", "master"]
  
jobs:
  checks:
    name: Run checks, tests, and linting
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run cargo check
        run: cargo check --all-features

      - name: Run cargo test
        run: cargo test --all-features

#      - name: Run cargo clippy
#        run: cargo clippy --all-features -- -D warnings

  release:
    name: Build and Release Binaries
    if: startsWith(github.ref, 'refs/tags/v')
    needs: checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-pc-windows-msvc]
    steps:
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        run: |
          mkdir -p release
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            cp target/${{ matrix.target }}/release/*.exe release/
          else
            cp target/${{ matrix.target }}/release/* release/
          fi

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
